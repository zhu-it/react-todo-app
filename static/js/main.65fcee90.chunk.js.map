{"version":3,"sources":["components/TodoItem.module.css","components/TodoItem.tsx","components/TodoList.tsx","components/Header.tsx","components/InputTodo.tsx","pages/SinglePage.tsx","pages/About.tsx","pages/NoMatch.tsx","components/Navbar.tsx","components/TodoContainer.tsx","index.tsx"],"names":["module","exports","TodoItem","props","todo","completed","id","title","useState","editing","setEditing","viewMode","editMode","display","className","styles","item","onDoubleClick","style","type","checkbox","checked","onChange","handleChangeProps","onClick","deleteTodoProps","color","size","fontStyle","opacity","textDecoration","undefined","textInput","value","e","setUpdateProps","target","onKeyDown","event","key","TodoList","todos","map","Header","padding","lineHeight","fontSize","fontWeight","marginBottom","textTransform","textAlign","InputTodo","setTitle","onSubmit","preventDefault","trim","addTodoProps","alert","placeholder","name","SinglePage","slug","useParams","description","find","About","useRouteMatch","url","path","to","NoMatch","Navbar","navbarOpen","setNavbarOpen","text","link","activeClassName","exact","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","useEffect","length","fetch","then","response","json","data","setItem","stringify","newTodo","userId","uuidV4","prevState","filter","updatedTitle","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.65fcee90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__2D0fx\",\"checkbox\":\"TodoItem_checkbox__1uLKZ\",\"textInput\":\"TodoItem_textInput__ZXG5z\"};","import { useState, KeyboardEvent } from 'react';\r\nimport { ITodo } from './TodoContainer';\r\nimport { AiOutlineDelete } from 'react-icons/ai';\r\nimport styles from './TodoItem.module.css';\r\n\r\ninterface ITodoItem {\r\n\tkey: string;\r\n\ttodo: ITodo;\r\n\thandleChangeProps: (id: string) => void;\r\n\tdeleteTodoProps: (id: string) => void;\r\n\tsetUpdateProps: (e: string, id: string) => void;\r\n}\r\n\r\nconst TodoItem = (props: ITodoItem) => {\r\n\tconst { completed, id, title } = props.todo;\r\n\r\n\tconst completedStyle = {\r\n\t\tfontStyle: 'italic',\r\n\t\tcolor: '#595959',\r\n\t\topacity: 0.4,\r\n\t\ttextDecoration: 'line-through',\r\n\t};\r\n\r\n\tconst [editing, setEditing] = useState(false);\r\n\r\n\tconst handleEditing = () => {\r\n\t\tsetEditing(true);\r\n\t};\r\n\r\n\tconst handleUpdateDone = (event: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\tsetEditing(false);\r\n\t\t}\r\n\t};\r\n\r\n\tlet viewMode: any = {};\r\n\tlet editMode: any = {};\r\n\r\n\tif (editing) {\r\n\t\tviewMode.display = 'none';\r\n\t} else {\r\n\t\teditMode.display = 'none';\r\n\t}\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('Render Item...', id);\r\n\t// \treturn () => {\r\n\t// \t\tconsole.log('Porządki...', id);\r\n\t// \t};\r\n\t// }, [id]);\r\n\r\n\treturn (\r\n\t\t<li className={styles.item}>\r\n\t\t\t<div onDoubleClick={handleEditing} style={viewMode}>\r\n\t\t\t\t<input type=\"checkbox\" className={styles.checkbox} checked={completed} onChange={() => props.handleChangeProps(id)} />\r\n\t\t\t\t<button onClick={() => props.deleteTodoProps(id)}>\r\n\t\t\t\t\t<AiOutlineDelete color=\"orangered\" size=\"23px\" />\r\n\t\t\t\t</button>\r\n\t\t\t\t<span style={completed ? completedStyle : undefined}>{title}</span>\r\n\t\t\t</div>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName={styles.textInput}\r\n\t\t\t\tstyle={editMode}\r\n\t\t\t\tvalue={title}\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tprops.setUpdateProps(e.target.value, id);\r\n\t\t\t\t}}\r\n\t\t\t\tonKeyDown={handleUpdateDone}\r\n\t\t\t/>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default TodoItem;\r\n","import TodoItem from './TodoItem';\r\nimport { ITodo, IState } from './TodoContainer';\r\n\r\nconst TodoList = (props: IState) => {\r\n\treturn (\r\n\t\t<ul>\r\n\t\t\t{props.todos.map((todo: ITodo) => (\r\n\t\t\t\t<TodoItem\r\n\t\t\t\t\tkey={todo.id}\r\n\t\t\t\t\ttodo={todo}\r\n\t\t\t\t\thandleChangeProps={props.handleChangeProps}\r\n\t\t\t\t\tdeleteTodoProps={props.deleteTodoProps}\r\n\t\t\t\t\tsetUpdateProps={props.setUpdateProps}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default TodoList;\r\n","const Header = () => {\r\n\tconst headerStyle = {\r\n\t\tpadding: '20px 0',\r\n\t\tlineHeight: '1.5em',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<header style={headerStyle}>\r\n\t\t\t<h1\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tfontSize: '6rem',\r\n\t\t\t\t\tfontWeight: 600,\r\n\t\t\t\t\tmarginBottom: '2rem',\r\n\t\t\t\t\tlineHeight: '1em',\r\n\t\t\t\t\tcolor: '#ececec',\r\n\t\t\t\t\ttextTransform: 'lowercase',\r\n\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\ttodos\r\n\t\t\t</h1>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { useState, ChangeEvent } from 'react';\r\nimport { AiOutlineFileAdd } from 'react-icons/ai';\r\n\r\ninterface IInputTodo {\r\n\taddTodoProps: (title: string) => void;\r\n}\r\n\r\nconst InputTodo = (props: IInputTodo) => {\r\n\tconst [title, setTitle] = useState({ title: '' });\r\n\r\n\tconst onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetTitle({ ...title, [e.target.name]: e.target.value });\r\n\t};\r\n\r\n\tconst handleSubmit = (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tif (title.title.trim()) {\r\n\t\t\tprops.addTodoProps(title.title);\r\n\t\t\tsetTitle({ title: '' });\r\n\t\t} else {\r\n\t\t\talert('Nie wpisałeś opisu zadania');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit} className=\"form-container\">\r\n\t\t\t<input type=\"text\" className=\"input-text\" placeholder=\"Dodaj zadanie...\" value={title.title} onChange={onChange} name=\"title\" />\r\n\t\t\t<button className=\"input-submit\">\r\n\t\t\t\t<AiOutlineFileAdd className=\"submit-icon\" />\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default InputTodo;\r\n","import { useParams } from 'react-router-dom';\r\n\r\ninterface IAbout {\r\n\tslug: string;\r\n\ttitle: string;\r\n\tdescription: string;\r\n}\r\n\r\nconst SinglePage = () => {\r\n\tconst aboutData = [\r\n\t\t{\r\n\t\t\tslug: 'about-app',\r\n\t\t\ttitle: 'O aplikacji',\r\n\t\t\tdescription:\r\n\t\t\t\t'W tej aplikacji możesz dodawać, usuwać, zapisywać i edytować elementy. Aby edytować elementy, po prostu kliknij je dwukrotnie. Po zakończeniu naciśnij klawisz Enter, aby zapisać. Ta aplikacja zachowa Twoje dane w lokalnej pamięci przeglądarki. Niezależnie od tego, czy przeładujesz, zamkniesz aplikację, czy ją ponownie otworzysz, nadal masz dostęp do swoich zadań do wykonania.',\r\n\t\t},\r\n\t\t{\r\n\t\t\tslug: 'about-author',\r\n\t\t\ttitle: 'O autorze',\r\n\t\t\tdescription: 'Ta aplikacja została stworzona przez Kamila Juchniewicz, programistę m.in. webowego, IOT, Data Mining i specjalistę ERP.',\r\n\t\t},\r\n\t];\r\n\r\n\tconst { slug } = useParams<IAbout>();\r\n\tconst aboutContent: IAbout | undefined = aboutData.find((item) => item.slug === slug);\r\n\tconst { title, description } = aboutContent!;\r\n\r\n\treturn (\r\n\t\t<div className=\"main__content\">\r\n\t\t\t<h1>{title}</h1>\r\n\t\t\t<p>{description}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SinglePage;\r\n","import { Link, Route, useRouteMatch } from 'react-router-dom';\r\nimport SinglePage from './SinglePage';\r\n\r\nconst About = () => {\r\n\tconst { url, path } = useRouteMatch();\r\n\treturn (\r\n\t\t<div className=\"about__content\">\r\n\t\t\t<ul className=\"about__list\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to={`${url}/about-app`}>O nas Aplikacja</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to={`${url}/about-author`}>O nas Autor</Link>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t<Route path={`${path}/:slug`}>\r\n\t\t\t\t<SinglePage />\r\n\t\t\t</Route>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default About;\r\n","const NoMatch = () => {\r\n\treturn <h3>Brak dopasowania dla tej strony</h3>;\r\n};\r\n\r\nexport default NoMatch;\r\n","import { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { MdClose } from 'react-icons/md';\r\nimport { FiMenu } from 'react-icons/fi';\r\n\r\nconst Navbar = () => {\r\n\tconst links = [\r\n\t\t{\r\n\t\t\tid: 1,\r\n\t\t\tpath: '/',\r\n\t\t\ttext: 'Domowa',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 2,\r\n\t\t\tpath: '/about',\r\n\t\t\ttext: 'O nas',\r\n\t\t},\r\n\t];\r\n\r\n\tconst [navbarOpen, setNavbarOpen] = useState(false);\r\n\r\n\tconst handleToggle = () => {\r\n\t\tsetNavbarOpen(!navbarOpen);\r\n\t};\r\n\r\n\tconst closeMenu = () => {\r\n\t\tsetNavbarOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<nav className=\"navBar\">\r\n\t\t\t<button onClick={handleToggle}>{navbarOpen ? <MdClose color=\"#fff\" size=\"40px\" /> : <FiMenu color=\"#7b7b7b\" size=\"40px\" />}</button>\r\n\t\t\t<ul className={`menuNav ${navbarOpen ? ' showMenu' : ''}`}>\r\n\t\t\t\t{links.map((link) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={link.id}>\r\n\t\t\t\t\t\t\t<NavLink to={link.path} activeClassName=\"active-link\" onClick={() => closeMenu()} exact>\r\n\t\t\t\t\t\t\t\t{link.text}\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n};\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TodoList from './TodoList';\r\nimport Header from './Header';\r\nimport InputTodo from './InputTodo';\r\nimport { v4 as uuidV4 } from 'uuid';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport About from '../pages/About';\r\nimport NoMatch from '../pages/NoMatch';\r\nimport Navbar from './Navbar';\r\n\r\nexport interface ITodo {\r\n\tuserId: number;\r\n\tid: string;\r\n\ttitle: string;\r\n\tcompleted: boolean;\r\n}\r\n\r\nexport interface IState {\r\n\ttodos: Array<ITodo>;\r\n\thandleChangeProps(id: string): void;\r\n\tdeleteTodoProps(id: string): void;\r\n\tsetUpdateProps(updatedTitle: string, id: string): void;\r\n}\r\n\r\nconst TodoContainer = () => {\r\n\tconst getInitialTodos = () => {\r\n\t\tconst temp = localStorage.getItem('todos');\r\n\t\t// console.log('temp', temp);\r\n\t\tlet loadedTodos: ITodo[] = JSON.parse(temp!);\r\n\t\t// console.log('loadedTodos', loadedTodos);\r\n\t\treturn loadedTodos || [];\r\n\t};\r\n\r\n\tconst [todos, setTodos] = useState<any>(getInitialTodos());\r\n\r\n\tuseEffect(() => {\r\n\t\tif (todos.length === 0) {\r\n\t\t\tfetch('https://jsonplaceholder.typicode.com/todos?_limit=10')\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((data: ITodo[]) => setTodos(data));\r\n\t\t}\r\n\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\r\n\t}, [todos]);\r\n\r\n\tconst handleChange = (id: string) => {\r\n\t\tsetTodos((prevState: any) =>\r\n\t\t\tprevState.map((todo: ITodo) => {\r\n\t\t\t\tif (todo.id === id) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...todo,\r\n\t\t\t\t\t\tcompleted: !todo.completed,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn todo as ITodo;\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst delTodo = (id: string) => {\r\n\t\tsetTodos([\r\n\t\t\t...todos.filter((todo: ITodo) => {\r\n\t\t\t\treturn todo.id !== id;\r\n\t\t\t}),\r\n\t\t]);\r\n\t};\r\n\r\n\tconst setUpdate = (updatedTitle: string, id: string) => {\r\n\t\tsetTodos(\r\n\t\t\ttodos!.map((todo: ITodo) => {\r\n\t\t\t\tif (todo.id === id) {\r\n\t\t\t\t\ttodo.title = updatedTitle;\r\n\t\t\t\t}\r\n\t\t\t\treturn todo;\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst addTodoItem = (title: string) => {\r\n\t\tconst newTodo: ITodo = {\r\n\t\t\tuserId: 1,\r\n\t\t\tid: uuidV4(),\r\n\t\t\ttitle: title,\r\n\t\t\tcompleted: false,\r\n\t\t};\r\n\t\tsetTodos([...todos, newTodo]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/\" exact>\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t\t\t<Header />\r\n\t\t\t\t\t\t\t<InputTodo addTodoProps={addTodoItem} />\r\n\t\t\t\t\t\t\t<TodoList todos={todos as ITodo[]} handleChangeProps={handleChange} deleteTodoProps={delTodo} setUpdateProps={setUpdate} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/about\">\r\n\t\t\t\t\t<About />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"*\">\r\n\t\t\t\t\t<NoMatch />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TodoContainer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport TodoContainer from './components/TodoContainer';\nimport './index.css';\nimport './App.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t<TodoContainer />\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}